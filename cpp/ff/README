Note to Aaron/interviewer:
   Overall, to complete all the requirements/concerns in proj desc. as well as the ones here, I will need at least a week's work....
   So here I just list and show what's already done, and what's remaing...

Completed list from ff.cpp: 
    0. work time cost: 1 day

    1. BuildFilesDB() to travers all files info under dir into local db 
    2. DoWork/DoSearchTask() to
    2.1 setup and start a new thread for each substring matching task against the info from gFileDB,
    2.2 all threads share same result data: gResult, which is protected by mutex to avoid race
    2.3 the search work time cost is discussed in ff.cpp: design part 3., only one part that can speed up is StrMatch using KMP.

TODO list to complete feature:
    0. work time estimated: 1 day coding + 3 days testing
    1. main proc starts another thread to periodically call DumpResult()
    1.1 may consider more cases about thread issues in DoSearchTask()...
    2. main proc accept the cmdline instructions and singals
    3. another test prog as well as the test plan
    3.1 basically two parts, the real data test (aka use local real dir for testing)
    3.2 and the auto-generated gFileDB for special (boundary, logic, err handling, etc...) test
    3.2 also the cmdline/user-experience/signal test
    3.3 env test (low mem/cup), etc.

TODO list to improve:
    0. work time estimated: 2 days coding + 0 days testing(suppose all cases automated)

    1. autoconf/automake files to do headers/sys routines check for diff Linux envs.
    2. improve the code to avoid the ugly mixed-up for c and c++ styles...
    3. improve the codes for XXX assumptions.
    3. split the funcs into diff files for main.cpp, filedb.cpp, search.cpp, worker.cpp
    4. locale or unicode concerns...
